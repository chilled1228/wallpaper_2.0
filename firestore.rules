rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }

    function isAdmin() {
      return isAuthenticated() && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Blog posts - public read access
    match /blog_posts/{post} {
      allow read: if true;  // Anyone can read blog posts
      allow write: if isAdmin();  // Only admins can write
      allow list: if true;  // Allow listing blog posts
      
      // Allow access to post metadata
      match /{metadata=**} {
        allow read: if true;
        allow write: if isAdmin();
      }
    }

    // Wallpapers collection - allow reading featured/public wallpapers
    match /wallpapers/{wallpaper} {
      allow read: if resource.data.isPublic == true && resource.data.status == 'active';
      allow list: if true; // For listing wallpapers on homepage
      allow write: if isAdmin();
    }

    // Prompts collection - public read access
    match /prompts/{prompt} {
      allow read, list: if true;  // Anyone can read and list prompts
      allow write: if isAdmin();  // Only admins can create/update/delete prompts
    }

    // User profiles
    match /users/{userId} {
      allow read: if isAuthenticated() && (request.auth.uid == userId || isAdmin());
      allow create: if isAuthenticated() && request.auth.uid == userId;
      allow update: if isAuthenticated() && (request.auth.uid == userId || isAdmin());
      allow delete: if isAdmin();
    }

    // Metadata collection
    match /metadata/{document=**} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // All other collections - admin access only
    match /{collection}/{document=**} {
      allow read, write: if isAdmin();
    }
  }
}